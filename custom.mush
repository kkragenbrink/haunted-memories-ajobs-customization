@create [System] Anomaly Jobs Customizations=10
@lock [System] Anomaly Jobs Customizations==*Royalty Demon V
@Desc [System] Anomaly Jobs Customizations=%r[columns(sort(lattr(me/*)),18,4)]%r%r[center(Please do not rename this object.,79)]
&CMD_JOBS/ACK [System] Anomaly Jobs Customizations=$+jobs/ack:@switch/first [u(%vA/HAS_ACCESS,%#)][xget(%#,JOBSN)]=0?,{@pemit %#=Permission denied.},11,{@force %#=+jobs/catchup},{think [setq(1,secs())]; &LAST_ACK %#=%q1; @pemit %#=[ansi(h,+jobs:)] All jobs have been acknowledged.;}
&CMD_JOBS/PRI_LIST [System] Anomaly Jobs Customizations=$+jobs/pri *:think setq( 0, locate( %vC, %0, i ) ); @assert u( %vA/FN_ACCESSCHECK, %q0, %# ) = { @pemit %# = msg( hc, +jobs, Permission denied. ); }; @assert isdbref( %q0 ) = { @pemit %# = msg( hc, +jobs, That is not a valid bucket. Type '[ansi( h, +buckets )]' for a list of valid buckets.; }; @pemit %# = u( %vA/FN_JOBSHEADER, %# ); @wait %! = { @pemit %# = u( %vA/FN_FOOTER ); }; @dolist/notify revwords( sortby( %!/SORTBY_PRI_LIST, muxchildren( %q0 ) ) ) = { @pemit %# = u( %vA/FN_JOBLIST, ##, %# ); };
&CMD_JOBS/READ [System] Anomaly Jobs Customizations=$+jobs/read *:@switch [u(%va/HAS_ACCESS,%#)][setq(0,pmatch(%0))][or(match(%0,none),isdbref(%q0))]=0*,{@pemit %#=Permission denied.},10,@pemit %#={There is no player by that name. Request must be by player or 'none'.},{@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [setq(1,switch(match(%0,none),0,%q0,))][setr(x,trim(squish(iter(revwords(lcon(%va)),switch(u(%!/FIL_READ,##,%q1),1,##)))))]={@pemit %#=[ifelse(u(%va/FN_ACCESSCHECK,parent(##),%#),[u(%va/FN_JOBLIST,##,%#)],)]};@wait me={@pemit %#=[u(%va/FN_FOOTER,[words(%qX)] Jobs.)]};@wait 0=@notify me}
&CMD_JOBS/SPHERE [System] Anomaly Jobs Customizations=$+jobs/sphere *:@switch [setq(0,locate(%vc,%0,i))][setq(9,pmatch(switch(%0,mort,mortal,sight,sighted,vamp,vampire,were,werewolf,lost,changeling,%0)))][u(%va/FN_ACCESSCHECK,%q0,%#)][isdbref(%q0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid bucket.Type '[ansi(h,+buckets)]' for a list of valid buckets.},{[setq(a,munge(%va/SORTBY_JOB,iter(muxchildren(%q0),rest(name(##))),muxchildren(%q0)))];[setq(1,switch(match(%0,none),0,%q9,))];[setq(b,trim(squish(iter(revwords(lcon(%va)),switch(u(%va/FIL_WHO,##,%q1),1,##)))))];[setq(x,setunion(%qa,%qb))];[setq(y,iter(%qx,rest(name(##))))];@pemit %#=[u(%va/FN_JOBSHEADER,%#)];@dolist [munge(%va/SORTBY_JOB,%qy,%qx)]={@pemit %#=[u(%va/FN_JOBLIST,##,%#)]};@wait me={@pemit %#=[u(%va/FN_FOOTER,[words(%qx)] Jobs. [ansi(hr,*)] Denotes New Activity.)]};@wait 0=@notify me}
&CMD_MYJOBS/ACK [System] Anomaly Jobs Customizations=$+myjobs/ack:@include/command #42/CMD_MYJOBS/CATCHUP
&CMD_MYJOB/CC [System] Anomaly Jobs Customizations=$+myjob/cc *=*:@assert not( haspower( %#, GUEST ) ) = { @pemit %# = objeval( %#, error() ); }; think setq( J, locate( %vA, Job %0, i ) ); @assert isdbref( %qJ ) = { @pemit %# = %ch%ccJOBS:%cn %0 is not a valid +job.; }; @assert match( xget( %qJ, OPENED_BY ), %# ) = { @pemit %# = %ch%ccJOBS:%cn You are not on that job.; }; @assert not( hasattr( %qJ, LOCKED ) ) = { @pemit %# = %ch%ccJOBS:%cn That job is locked and cannot be changed at this time.; }; @assert not( match( RECC XP, name( parent( %qJ ) ) ) ) = { @pemit %# = %ch%ccJOBS:%cn You cannot cc someone into a [name( parent( %qJ ) )] job.; }; @assert not( iter( %1, if( isdbref( pmatch( itext( 0 ) ) ), null(), 1 ) ) ) = { @pemit %# = %ch%ccJOBS:%cn Invalid list of players.; }; think setq( C, setdiff( iter( %N [xget( %qJ, OPENED_BY )] %1, pmatch( itext( 0 ) ) ), ) ); &OPENED_BY %qJ = %qC; @trigger %vA/TRIG_ADD = %qJ, Source changed to [u( %vA/FN_PLAYERLIST, %qJ )]., %#, SRC; @trigger %vA/TRIG_BROADCAST = [parent( %qJ )], Job %0 source changed by %N; @pemit %# = %ch%ccJOBS:%cn You change the CC list for job %0 to [u( %vA/FN_PLAYERLIST, %qJ )].; @dolist xget( %qJ, OPENED_BY ) = { @pemit pmatch( ## ) = %ch%ccJOBS:%cn You have been CCed on job %0.; @set %qJ/COMMENT_1=NO_INHERIT };
&CMD_MYJOB/COMMENT [System] Anomaly Jobs Customizations=$+myjob/comment *=*:@assert lte(strlen(%1),get(%vA/BUFFER))={@pemit %#=Your message is too long for a single job comment.;};@switch [!hasflag(%#,guest)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][cor(isstaff(%#),and(u(%va/IS_PUBLIC,%q0),match(get(%q0/opened_by),%#)))][not(hasattr(%q0,LOCKED))]=0*,@pemit %#={This command is not available to guests.},10*,@pemit %#={That is an invalid job number.},110*,{@pemit %#=Job %0 is not yours. You can only modify your own jobs.},1110*,{@pemit %#=That job is locked and cannot be changed at this time.},{@pemit %#=Comments to job number %0 added.;@trigger %va/TRIG_ADD=%q0,[u(%vA/FN_STRTRUNC,%1,get(%vA/BUFFER))],%#,ADD;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.}
&CMD_MYJOB/COMPLETE [System] Anomaly Jobs Customizations=$+myjob/complete *:@assert not( haspower( %#, GUEST ) ) = { @pemit %# = objeval( %#, error() ); }; think setq( J, locate( %vA, Job %0, i ) ); @assert isdbref( %qJ ) = { @pemit %# = msg( hc, +jobs, That is not a valid job. ); }; @assert not( hasattr( %qJ, LOCKED ) ) = { @pemit %# = msg( hc, +jobs, That job is locked and cannot be changed at this time. ); }; @assert match( COMM, name( parent( %qJ ) ) ) = { @pemit %# = msg( hc, +jobs, You cannot complete that job.); }; @assert match( xget( %qJ, OPENED_BY ), %# ) = { @pemit %# = msg( hc,+jobs, You cannot complete that job. ); }; think u( %vA/FN_ADDSTAT_ART, parent( %qJ ), %qJ ); @trigger %vA/TRIG_BROADCAST = [parent( %qJ )], Job %0 has been completed by %N.; @trigger %vA/TRIG_ADD = %qJ, Job completed by player., %#, COM; @trigger %qJ/HOOK_COMPLETE = %qJ, %#; @trigger %vB/TRIG_COMPLETE = %0, %#, Job completed by player., parent( %qJ ); @trigger %qJ/TRIG_LOG = %0, %#; @pemit %# = msg( hc, +jobs, You complete job #%0. ); @wait 10={@dest %qJ}
&CMD_MYJOB/LEAVE [System] Anomaly Jobs Customizations=$+myjob/leave *:@assert not( haspower( %#, GUEST ) ) = { @pemit %# = objeval( %#, error() ); }; think setq( J, locate( %vA, Job %0, i ) ); @assert isdbref( %qJ ) = { @pemit %# = %ch%ccJOBS:%cn %0 is not a valid +job.; }; @assert match( xget( %qJ, OPENED_BY ), %# ) = { @pemit %# = %ch%ccJOBS:%cn You may only leave a job which you are on.; }; @assert not( hasattr( %qJ, LOCKED ) ) = { @pemit %# = %ch%ccJOBS:%cn That job is locked and cannot be changed at this time.; }; @assert not( match( RECC XP, name( parent( %qJ ) ) ) ) = { @pemit %# = %ch%ccJOBS:%cn You cannot leave a [name( parent( %qJ ) )] job.; }; &OPENED_BY %qJ = [setdiff( xget( %qJ, OPENED_BY ), %# )]; @trigger %vA/TRIG_ADD = %qJ, Source changed to [u( %vA/FN_PLAYERLIST, %qJ )]., %#, SRC; @trigger %vA/TRIG_BROADCAST = [parent( %qJ )], Job %0 source changed by %N; @pemit %# = %ch%ccJOBS:%cn You remove yourself from job %0.; @dolist xget( %qJ, OPENED_BY ) = { @pemit pmatch( ## ) = %ch%ccJOBS:%cn %N has removed themself from job %0.; @set %qJ/COMMENT_1=NO_INHERIT };
&CMD_MYJOB/PRIVATE [System] Anomaly Jobs Customizations=$+myjob/PRIVATE *=*:@switch [!hasflag(%#,guest)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][cor(isstaff(%#),and(u(%va/IS_PUBLIC,%q0),match(get(%q0/opened_by),%#)))][not(hasattr(%q0,LOCKED)),gt(member(%q0/TAGGED_FOR),%#),0))]=0*,@pemit %#={This command is not available to guests.},10*,@pemit %#={That is an invalid job number.},110*,{@pemit %#=Job %0 is not yours. You can only modify your own jobs.},1110*,{@pemit %#=That job is locked and cannot be changed at this time.},{@pemit %#=Comments to job number %0 added.;@trigger %va/TRIG_ADD=%q0,[u(%vA/FN_STRTRUNC,%1,get(%vA/BUFFER))],%#,ADD;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.}
&CMD_MYJOB/QUERY [System] Anomaly Jobs Customizations=$+myjob/query */*=*:@assert not( haspower( %#, GUEST ) ) = { @pemit %# = objeval( %#, error() ); }; @assert eq( words( %0 ), ladd( map( %!/MAP_ISPLAYER, %0 ) ) ) = { @pemit %# = msg( hc, +jobs, There is a problem with the player list. ); }; @assert lte( strlen( %2 ), get( %vA/BUFFER ) ) = { @pemit %# = msg( hc, +jobs, Your message is too long for a single job comment. ); }; think setq( 1, inc( xget( %vA, JOBS_NUM ) ) ); think setq( a, map( %vA/MAP_SOURCE, %0, %b, | ) ); @trigger %vA/TRIG_CREATE=%#, locate( %vC, COMM, i ), 2, strtrunc( secure( %1 ), 30 ), ansi( hw, Queried [u( %vA/FN_PRETTY, map( %vA/MAP_NAME, %qA, |, | ), | )]: )%r%r%2, setunion( edit( %#|%qA, |, %b ), ), , 1; @pemit %# = msg( hc, +jobs, You have sent a query to '%0' regarding '%1'. ); @wait 5={ think setq( J, locate( %vA, Job %q1, i ) ); @set %qJ/COMMENT_1=NO_INHERIT; };
&CMD_MYJOB/REPLY [System] Anomaly Jobs Customizations=$+myjob/reply *=*:@assert isdbref( setr( J, locate( %vA, Job %0, i ) ) ) = { @pemit %# = There is no job by that number.; }; @assert cor( match( xget( %qJ, TAGGED_FOR ), %# ), isstaff( %# ) ) = { @pemit %# = Permission denied.; }; @assert not( u( %vA/IS_LOCKED, %qJ ) ) = { @pemit %# = That job is locked. It must be unlocked before modifications can be made.; }; @trigger %vA/TRIG_ADD = %qJ, strtrunc( ansi( h, Mail sent to [u( %vA/FN_PLAYERLIST, %qJ )]:)%r%r%1, get( %vA/BUFFER ) ), %#, MAI; @trigger %vA/TRIG_BROADCAST = [parent( %qJ )], Reply sent about job #%0 by %N.; @pemit %# = You have mailed [u( %vA/FN_PLAYERLIST, %qJ )] about job #%0, with the comments: %1;
&CMD_BUILD [System] Anomaly Jobs Customizations=$+build *=*:@assert lte(strlen(%1),get(%vA/BUFFER))={@pemit %#=Your message is too long for a single job comment.;};@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit %#=You have sent your build request to staff about '[secure(%0)]'.;@trigger %va/TRIG_CREATE=%#,locate(%vc,BUILD,i),1,[strtrunc(secure(%0),30)],%1,,,3}
&CMD_RECC [System] Anomaly Jobs Customizations=$+recc *=*:@switch [not(haspower(%#,guest))][andspheres(%#,APPROVED !NORECC)][isdbref( setr( P, pmatch( trim( %0 ) ) ) )]=0*,{@pemit %#=Permission Denied.},10*,{@pemit %#=You are not permitted to submit reccs. Please contact staff if you believe this is an error.},110*,{@pemit %#=I can't find a player named '%0'.},{@pemit %#=You have submitted your recc for '[name( %qP )]'.;@trigger %va/TRIG_CREATE=%#,locate(%vc,RECC,i),1,[u(%va/FN_STRTRUNC,name(%qP),30)],%1,,,3; &_RECCS %# = %qP:[secs()] [ldelete( xget( %#, _RECCS ), 200 )]; @wait 2={think setq(J,filter(%!/FIL_MATCH_TITLE,lcon(%vA),,,name(%qP),));};}
&CMD_RECC/LOG [System] Anomaly Jobs Customizations=$+recc/log:@pemit %#=[header( Recc Log )]; @pemit %# = [list( get( %#/_reccs ), [ljust( name( first( ##, : ) ), 30 )][convsecs( last( ##, : ) )] )]; @pemit %# = [tail()];
&CMD_XP [System] Anomaly Jobs Customizations=$+xp *=*:@switch [not(haspower(%#,guest))][isstaff(%#)][gte(strlen(%1),xget(%vA,BUFFER))]=0*,{@pemit %#=Permission denied.},11*,{@pemit %#=[msg(hg, +xp)] Try '+xp/set' or '+xp/spend' to adjust a characters XP.},111*,{@pemit %#=The body of your message is too long. Please consider splitting it into multiple addendums to the job.},{@pemit %#=[msg(hg, +xp)] You have submitted an XP request titled '[secure(strtrunc(%0,30))]' for staff which has been added to your +myjobs list. Depending on the nature of your request it may take up to 48 hours for a response, please be patient, we will get to it as soon as we can.;@trigger %va/TRIG_CREATE=%#,[setr(X,locate(%vc,XP,i))],2,[strtrunc(secure(%0),30)],[strtrunc(%1,get(%va/BUFFER))],,[xget(%qX, AUTO-ASSIGN)],2}
&FIL_ARCHCOMMENTS [System] Anomaly Jobs Customizations=[gt(member(get(%va/LIST_VISCOMMENTS) EDT,first(get(%q0/%0),|)),0)]
&FIL_FROM [System] Anomaly Jobs Customizations=[t(match(get(%0/OPENED_BY),%1))]
&FIL_MATCH_TITLE [System] Anomaly Jobs Customizations=t(strmatch(xget(%0,TITLE),%1))
&FIL_READ [System] Anomaly Jobs Customizations=[t(match(get(%0/LIST_READERS),%1|*))]
&TRIG_COMPRESS [System] Anomaly Jobs Customizations=@switch [match(#41,%#)][words(remove(lcon(%va),#-1))]=0*,{@pemit %#=Permission denied.},10*,{&JOBS_NUM %va=0;@pemit %#=Compressed. The next job number will be [inc(get(%va/JOBS_NUM))].},{@dolist [lnum(1,words(lcon(%va)))]={@name [extract(revwords(lcon(%va)),##,1)]=Job ##};&JOBS_NUM %va=[words(lcon(%va))];@pemit %#=Compressed. The next job number will be [inc(get(%va/JOBS_NUM))].}
&SORTBY_PRI_LIST [System] Anomaly Jobs Customizations=switch( comp( xget( %0, PRIORITY ), xget( %1, PRIORITY ) ), 0, ifelse( gte( last( name( %0 ) ), last( name( %1 ) ) ), -1, 1 ), #$ )
@VA [System] Anomaly Jobs Customizations=#43
@VB [System] Anomaly Jobs Customizations=#46
@VC [System] Anomaly Jobs Customizations=#1846
&CMD_LASTPOSE [System] Anomaly Jobs Customizations=$+lastpose*:@break isstaff( %# ); @pemit %# = %q2; @assert strlen(%0)={ @pemit %# = msg( hw, +lastpose, Your last pose was at RL [convsecs( xget( %#, _LAST_POSE ) )]. \([timefmt( $c days\, $X hours ago IC, sub( vsecs(), secstovsecs( xget( %#, _LAST_POSE ) ) ) )]\) ); }; think setq( 0, locate( #43, Job %0, i ) ); @assert isdbref( %q0 ) = { @pemit %# = msg( hw, +lastpose, That is not a valid job. ); }; @assert match( xget( %q0, OPENED_BY ), %# ) = { @pemit %# = msg( hw, +lastpose, That is not your job. ); }; @assert not( hasattr( %q0, LOCKED ) ) = { @pemit %# = msg( hw, +lastpose, That job is locked. ); }; @pemit %# = msg( hw, +lastpose, Your last pose was at RL [convsecs( xget( %#, _LAST_POSE ) )]. \([timefmt( $c days\, $X hours ago IC, sub( vsecs(), secstovsecs( xget( %#, _LAST_POSE ) ) ) )]\) ); @trigger #43/TRIG_ADD = %q0, %N's last pose was at RL [convsecs( xget( %#, _LAST_POSE ) )]. \([timefmt( $c days\, $X hours ago IC, sub( vsecs(), secstovsecs( xget( %#, _LAST_POSE ) ) ) )]\), %!, ADD; @trigger %vA/TRIG_BROADCAST=[parent( %q0 )], Comments added to job %0 by %n.;
&CMD_MYJOB/ADD [System] Anomaly Jobs Customizations=$+myjob/add *=*:@assert lte(strlen(%1),get(%vA/BUFFER))={@pemit %#=Your message is too long for a single job comment.;};@switch [!hasflag(%#,guest)][setq(0,locate(%va,Job %0,i))][isdbref(%q0)][cor(isstaff(%#),and(u(%va/IS_PUBLIC,%q0),match(get(%q0/opened_by),%#)))][not(hasattr(%q0,LOCKED))]=0*,@pemit %#={This command is not available to guests.},10*,@pemit %#={That is an invalid job number.},110*,{@pemit %#=Job %0 is not yours. You can only modify your own jobs.},1110*,{@pemit %#=That job is locked and cannot be changed at this time.},{@pemit %#=Comments to job number %0 added.;@trigger %va/TRIG_ADD=%q0,[u(%vA/FN_STRTRUNC,%1,get(%vA/BUFFER))],%#,MAI;@trigger %va/TRIG_BROADCAST=[parent(%q0)],Comments added to job %0 by %n.}
&CMD_APPS [System] Anomaly Jobs Customizations=$+apps *=*:@switch [not(haspower(%#,guest))][hassphere(%#,CHARGEN)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=CharGen: You are not in Chargen.},{@pemit %#=CharGen: You application has been submitted. Please add any additional notes to your application with the '+myjob/add <job#>=<comment>'.;@trigger %va/TRIG_CREATE=%#,[locate(%vc,APPS,i)],2,[strtrunc(secure(%0),30)],[strtrunc(%1,get(%va/BUFFER))],,[pmatch(switch(getstat(%#,faction),Mortal,Core,Sighted,Core,Wolfblood,Werewolf,Ghoul,Vampire,Sleepwalker,Mage,Mage,Mage,Enchanted-Mortal,Changeling,getstat(%#,faction)))],2}
&CMD_BUG [System] Anomaly Jobs Customizations=$+bug *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit %#=You have notified production staff of the [secure(u(%va/FN_STRTRUNC,%0,30))] bug, with the details '[secure(u(%va/FN_STRTRUNC,%1,get(%va/BUFFER)))]';@trigger %va/TRIG_CREATE=%#,locate(%vc,BUGS,i),3,[u(%va/FN_STRTRUNC,%0,30)],[u(%va/FN_STRTRUNC,%1,get(%va/BUFFER))],,,5}
&CMD_EQUIP [System] Anomaly Jobs Customizations=$+equip *=*:@switch [not(haspower(%#,guest))][gte(strlen(%1),xget(%vA,BUFFER))]=0*,{@pemit %#=Permission denied.},11*,{@pemit %#=The body of your message is too long. Please consider splitting it into multiple addendums to the job.},{@pemit %#=[msg(hg, +equip)] You have submitted an equipment request titled '[secure(strtrunc(%0,30))]' for staff which has been added to your +myjobs list. Depending on the nature of your request it may take up to 48 hours for a response, please be patient, we will get to it as soon as we can.;@trigger %va/TRIG_CREATE=%#,[setr(X,locate(%vc,Equip,i))],2,[strtrunc(secure(%0),30)],[strtrunc(%1,get(%va/BUFFER))],,[xget(%qX, AUTO-ASSIGN)],2}
&MAP_ISPLAYER [System] Anomaly Jobs Customizations=isdbref( u( %vA/MAP_SOURCE, %0 ) )
&CMD_JOBS/MEW [System] Anomaly Jobs Customizations=$+jobs/mew:@pemit %#=Purrrrrrrrrrrrrrrrrrr.
&TRIG_STAFF_ACTIVITY [System] Anomaly Jobs Customizations=@dolist xget( #1762, LIST-STAFF ) = { @mvattr ## = LIST_STATS, _LIST_STATS.[timefmt($02M,sub(secs(),mul(24,60,60)))]; };
&CMD_JOBS/STATS [System] Anomaly Jobs Customizations=$+jobs/stats *:@assert isstaff(%#)={@pemit %#=msg(hc,+jobs,Access denied.);};@assert isstaff(setr(T,pmatch(before(%0,=))))={@pemit %#=msg(hc,+jobs,%0 is not a member of staff.);}; think setq(M,trim(rest(%0,=))); @assert cor( not( strlen( %qM ) ), match( Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec, %qM ) ) = { @pemit %# = msg( hc, +jobs, %qM is not a valid month. ); }; @pemit %# = header( Job Activity for [name(%qT)][ifelse( strlen( %qM ), %bin [capstr(lcstr(%qM))], %bthis month )] ); @pemit %# = [list( xget( %qT, [ifelse( strlen( %qM ), _, )]LIST_STATS[switch( %qM, Jan, .01, Feb, .02, Mar, .03, Apr, .04, May, .05, Jun, .06, Jul, .07, Aug, .08, Sep, .09, Oct, .10, Nov, .11, Dec, .12, )] ), [rjust( before( itext( 0 ), | ):, 5 )] [rest( itext( 0 ), | )] )]; @pemit %# = tail();
&CREDITS [System] Anomaly Jobs Customizations=Anomaly jobs customizations by Loki@Haunted Memories (loki@haunted-memories.net). You are free to use and reproduce these customizations at will, but please retain these credits.
&LIST_STATS [System] Anomaly Jobs Customizations=ADD|31
&FUN_LAST_MODIFIED [System] Anomaly Jobs Customizations=[elements(xget(%0,last(lattr(%0/COMMENT_*))),2,|)]
&FIL_COMM_EXPIRED [System] Anomaly Jobs Customizations=gte(sub(secs(),u(#49/FUN_LAST_MODIFIED,%0)),mul(30,24,60,60))
&CMD_JOB/READERS [System] Anomaly Jobs Customizations=$+job/readers *:@assert isstaff(%#) = { @pemit %# = objeval(%#, error()); }; think setq(J, locate(%vA, Job %0, i)); @assert isdbref(%qJ) = { @pemit %# = msg(hc, +jobs, That is not a valid job.); }; @assert u(%vA/FN_ACCESSCHECK, parent(%qJ), %#, %qJ) = { @pemit %# = msg(c, +jobs, You do not have access to that job.); }; @pemit %#=u(%vA/FN_HEADER,name(%qJ) Readers); @pemit %# = u(%vA/FN_BANNER, %qJ); @pemit %# = ulocal(%!/FN_READERS,%qJ); @pemit %# = u(%vA/FN_FOOTER, u(%vA/FN_FLAGS, %qJ));
&FN_READERS [System] Anomaly Jobs Customizations=%r[repeat(-, u(%vA/FN_FLEXWIDTH, 79))]%r[rjust(ansi(hc,Last Add:),10)] [u(FN_ELAPSED_TIME, elements(xget(%0,last(lattr(%0/COMMENT_*))),2,|), secs())]%r[rjust(ansi(hc,Readers:),10)] %(Players who have read this job in the past%)%r[u(%vA/FN_COLUMNS,iter(get(%0/LIST_READERS),moniker(before(##, |)): [u(FN_ELAPSED_TIME, elements(xget(%0, comment_[after(##,|)]),2,|), secs())],,|),20,|,11)]%r[rjust(ansi(hc,Note:),10)] [wrap(Timestamps are since the last comment read was posted\, not since the last time the player read the job.,u(%vA/FN_FLEXWIDTH, 68), left,,,11)]
&FN_ELAPSED_TIME [System] Anomaly Jobs Customizations=first(timefmt($#2cd $#2Xh $#2Fm $#Gs, sub(%1, %0)))
&CMD_JOBS/MINE [System] Anomaly Jobs Customizations=$+jobs/mine:@include/command #42/CMD_JOBS/SELECT=mine
&CMD_PRP [System] Anomaly Jobs Customizations=$+prp *=*:@switch [u(%va/FN_GUEST,%#)]=1,{@pemit %#=This command is not available to guests.},{@pemit %#=You have requested [secure(u(%va/FN_STRTRUNC,trim(%0),30))] from staff. Please allow for some time to process it. Do not page staff about it - you will hear back soon.;@trigger %va/TRIG_CREATE=%#,u(%va/FN_FIND-BUCKET,PRP),2,[u(%va/FN_STRTRUNC,trim(secure(%0)),30)],[u(%va/FN_STRTRUNC,trim(%1),get(%va/BUFFER))],,,2}
&CMD_JOBS/TEAM [System] Anomaly Jobs Customizations=$+jobs/team *:@include/command #42/CMD_JOBS/SELECT=jgroup=+%0
&CMD_JOBS/VENUE [System] Anomaly Jobs Customizations=$+jobs/venue *:@include/command #42/CMD_JOBS/SELECT=venue=%0
&CMD_REQUEST [System] Anomaly Jobs Customizations=$+request *=*:@assert lte(strlen(%1),get(%vA/BUFFER))={@pemit %#=Your message is too long for a single job comment.;};@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit %#=You have sent your request about '[secure(%0)]' to staff. Please allow 48 hours to process it.;@trigger %va/TRIG_CREATE=%#,u(%vA/FN_FIND-BUCKET,REQ),2,[strtrunc(secure(%0),30)],%1,,,2}
@rxlevel [System] Anomaly Jobs Customizations=real shadow invis
@txlevel [System] Anomaly Jobs Customizations=real shadow invis
@set [System] Anomaly Jobs Customizations=ROYALTY
@set [System] Anomaly Jobs Customizations=INDESTRUCTABLE
@set [System] Anomaly Jobs Customizations=VISUAL
@set [System] Anomaly Jobs Customizations=SAFE
@set [System] Anomaly Jobs Customizations=INHERIT
@set [System] Anomaly Jobs Customizations=SIDEFX
@set [System] Anomaly Jobs Customizations=UNFINDABLE
@parent [System] Anomaly Jobs Customizations=Job Global Object <JGO>
